// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_dissimilarities_cpp
arma::cube compute_dissimilarities_cpp(const Rcpp::DataFrame& data1, const Rcpp::DataFrame& data2, const Rcpp::IntegerVector& var_types, const std::string& scaling);
RcppExport SEXP _gowerpmm_compute_dissimilarities_cpp(SEXP data1SEXP, SEXP data2SEXP, SEXP var_typesSEXP, SEXP scalingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type data1(data1SEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type data2(data2SEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type var_types(var_typesSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type scaling(scalingSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_dissimilarities_cpp(data1, data2, var_types, scaling));
    return rcpp_result_gen;
END_RCPP
}
// objective_function_cpp
double objective_function_cpp(Rcpp::NumericVector weights_r, const arma::cube& dissim_matrices);
RcppExport SEXP _gowerpmm_objective_function_cpp(SEXP weights_rSEXP, SEXP dissim_matricesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights_r(weights_rSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type dissim_matrices(dissim_matricesSEXP);
    rcpp_result_gen = Rcpp::wrap(objective_function_cpp(weights_r, dissim_matrices));
    return rcpp_result_gen;
END_RCPP
}
// get_rank_correlations_cpp
Rcpp::NumericVector get_rank_correlations_cpp(Rcpp::NumericVector weights_r, const arma::cube& dissim_matrices);
RcppExport SEXP _gowerpmm_get_rank_correlations_cpp(SEXP weights_rSEXP, SEXP dissim_matricesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights_r(weights_rSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type dissim_matrices(dissim_matricesSEXP);
    rcpp_result_gen = Rcpp::wrap(get_rank_correlations_cpp(weights_r, dissim_matrices));
    return rcpp_result_gen;
END_RCPP
}
// spearman_correlation_cpp
double spearman_correlation_cpp(const arma::vec& x, const arma::vec& y);
RcppExport SEXP _gowerpmm_spearman_correlation_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(spearman_correlation_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gowerpmm_compute_dissimilarities_cpp", (DL_FUNC) &_gowerpmm_compute_dissimilarities_cpp, 4},
    {"_gowerpmm_objective_function_cpp", (DL_FUNC) &_gowerpmm_objective_function_cpp, 2},
    {"_gowerpmm_get_rank_correlations_cpp", (DL_FUNC) &_gowerpmm_get_rank_correlations_cpp, 2},
    {"_gowerpmm_spearman_correlation_cpp", (DL_FUNC) &_gowerpmm_spearman_correlation_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_gowerpmm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
